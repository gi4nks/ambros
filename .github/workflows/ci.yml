name: CI

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  checks:
    name: Checks (vet, test, lint, security)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [ '1.25' ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}

      - name: Cache Go modules and build cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ${{ github.workspace }}/.gocache
            ~/.cache/go-mod
          key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('**/go.sum') }}

      - name: Install tools
        run: |
          set -eux
          go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest
          go install github.com/securego/gosec/v2/cmd/gosec@latest || true
          go install golang.org/x/vuln/cmd/govulncheck@latest || true

      - name: Go vet
        run: go vet ./...

      - name: Run unit tests
        run: go test ./...

      - name: Run tests (race detector)
        run: go test -race ./...

      - name: Run golangci-lint
        run: golangci-lint run --timeout 5m

      - name: Run gosec security scanner
        run: gosec ./...

      - name: Run govulncheck
        run: govulncheck ./...

  build:
    name: Build (Makefile)
    runs-on: ubuntu-latest
    needs: checks
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.25'

      - name: Install dependencies (make deps)
        run: |
          set -eux
          if make help >/dev/null 2>&1; then
            make deps || true
          fi

      - name: Build (make build)
        run: |
          set -eux
          if make help >/dev/null 2>&1; then
            make build || true
          fi
